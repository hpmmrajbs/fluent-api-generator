{% set productType = (method.isConstructor) ? (method.declaringClass) : (method.type) %}
{% set packageName = (packageName == "") ? method.declaringClass.packageName : packageName %}
{% set className = (className == "") ? concat(method.declaringClass.simpleName, "Parameters") : className %}
{% set typeParameterList = (method.isConstructor) ? productType.parameters : ((method.isStatic) ? method.typeVariables : merge(method.declaringClass.parameters, method.typeVariables)) %}
{% set classParameters = (empty(typeParameterList)) ? "" : concat("<", join(typeParameterList, ", "), ">") %}
package {{ packageName }};
import javax.annotation.Generated;

@Generated("Generated code using {{ templatePath }}")
public class {{ className }}{% if not empty(typeParameterList) %}<{% for t in typeParameterList %}{% if loop.first %}{% else %}, {% endif %}{{ t.declaration }}{% endfor %}>{% endif %} {
{% for parameter in method.parameters %}
    public interface {{ capitalize(parameter) }}Param<T> {
        T {{ parameter }}({{ parameter.type }} {{ parameter }});
    }
{% endfor %}
{% if method.isConstructor or method.isStatic %}
    public static {% for parameter in method.parameters %}{{ capitalize(parameter) }}Param<{% endfor %}{{ productType }}{% for parameter in method.parameters %}>{% endfor %} {{ factoryMethod }}() {
        return {% for parameter in method.parameters %}{{ parameter }} -> {% endfor %}{%
         if method.isConstructor %} new {{ productType }}{% else %}{{ method.declaringClass }}.{{ method }}{%
          endif %}({% for parameter in method.parameters %}{% if loop.first %}{% else %}, {% endif %}{{ parameter }}{% endfor %});
    }
    public static {% for parameter in method.parameters %}{% if loop.first %}{% else %}{{ capitalize(parameter) }}Param<{% endif %}{% endfor %}{{ productType }}{% for parameter in method.parameters %}{% if loop.first %}{% else %}>{% endif %}{% endfor %} {% for parameter in method.parameters %}{% if loop.first %}{{ parameter }}{% endif %}{% endfor %}({% for parameter in method.parameters %}{% if loop.first %}{{ parameter.type }} {{ parameter }}{% endif %}{% endfor %}) {
        return {{ factoryMethod }}().{% for parameter in method.parameters %}{% if loop.first %}{{ parameter }}{% endif %}{% endfor %}({% for parameter in method.parameters %}{% if loop.first %}{{ parameter }}{% endif %}{% endfor %});
    }
{% else %}
    public static {% for parameter in method.parameters %}{{ capitalize(parameter) }}Param<{% endfor %}{{ productType }}{% for parameter in method.parameters %}>{% endfor %} {{ factoryMethod }}({{ method.declaringClass }} factory) {
        return {% for parameter in method.parameters %}{{ parameter }} -> {% endfor %}factory.{{ method }}({% for parameter in method.parameters %}{% if loop.first %}{% else %}, {% endif %}{{ parameter }}{% endfor %});
    }
{% endif %}
}
